<?php

/**
 * Implements hook_install().
 */
function os_migrate_demo_install() {
  // Enable all features. We can't use spaces_features() as it might not
  // populated by the tie we enable this module.
  $preset = spaces_preset_load('os_scholar', 'og');
  $features = array(
    'os_links',
    'os_news',
    'os_image_gallery',
    'os_publications',
    'os_pages',
    'os_events',
    'os_reader',
    'os_blog',
    'os_classes',
    'os_presentations',
    'os_software',
    'os_dataverse',
    'os_booklets',
    'os_profiles',
    'os_biocv',
  );
  foreach ($features as $feature) {
    $preset->value['variable']['spaces_features'][$feature] = 1;
  }
  spaces_preset_save($preset);

  // Comment out for now.
  // // Temporary create the vocabs.
  // $sites = array(
    // 1 => 'bio',
    // 2 => 'class',
  // );
//
  // foreach ($sites as $nid => $bundle) {
    // $name = 'authors' . '_' . $nid;
    // if (!$vocabulary = taxonomy_vocabulary_machine_name_load($name)) {
      // // Create a vocaulary for the bundle in the VSite.
      // $vocabulary = (object) array(
        // 'machine_name' => $name,
        // 'name' => 'authors',
        // 'description' => '',
        // 'help' => '',
      // );
      // taxonomy_vocabulary_save($vocabulary);
//
      // $og_vocab = og_vocab_create_og_vocab($vocabulary->vid, 'node', $bundle);
      // $og_vocab->save();
    // }
//
    // og_vocab_relation_save($vocabulary->vid, 'node', $nid);
  // }
}
