<?php

/**
 * @file os_migrate.module
 *
 * Handles migration of openscholar from drupal6 to drupal7
 **/

/**
 * Implementation of hook_migrate_api
 *
 * Informs the Migrate module that this module provides migration classes
 */
function os_migrate_migrate_api() {
  return array('api' => 2);
}

/*
 * bash: set vars to also disable mail...
echo user_mail_{register_{admin_created,no_approval_required,pending_approval},password_reset,status_{blocked,activated},cancel_confirm,status_canceled}_notify | xargs -n1 | while read var ; do drush @d7 vset -y $var '' ; done
*/

/**
 * Implementation of hook_menu
 **/
function os_migrate_menu() {
  $items['admin/config/openscholar/os_migrate'] = array(
    'title' => 'OpenScholar Migration',
    'description' => 'OpenScholar Migration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('os_migrate_admin'),
    'access arguments' => array('administer site configuration'),
    'file' => 'os_migrate.admin.inc',
  );

  $items['admin/config/openscholar/os_migrate/register_dynamic'] = array(
    'title' => 'Register Dynamic Migrations',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('os_migrate_register_dynamic'),
    'access arguments' => array('administer site configuration'),
    'file' => 'os_migrate.admin.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 * Ignore depenencies dev setting changes migrate_ui_dashboard_form to ignore deps by default.
 */
function os_migrate_form_migrate_ui_dashboard_form_alter(&$form, &$form_state, $form_id) {
  $form['operations']['options']['force']['#default_value'] = variable_get('os_migrate_ignore_dependencies', FALSE);
}

/**
 * Implements hook_modules_enabled().
 *
 * Register dynamic migrate plugins for upgrading from OG6.
 */
function os_migrate_modules_enabled($modules) {
  if (!in_array('migrate', $modules) && !module_exists('migrate')) {
    return;
  }

  foreach (node_type_get_names() as $bundle => $value) {
    // Register a dynamic migration.
    Migration::registerMigration('OsOgVocabMigrate', 'OsOgVocabMigrate' . ucfirst($bundle), array('bundle' => $bundle));
  }
}

/**
 * Implements hook_mail().
 *
 * Prevent migrate from sending out system mail during user migration.
 */
function os_migrate_mail_alter(&$msg) {
  $migrating = variable_get('os_migrate_migrating_users', FALSE);
  $suppress = variable_get('os_migrate_suppress_email', TRUE);
  if (($msg['id'] == 'vsite_register_vsite_register_notify') && $migrating && $suppress) {
    $msg['send'] = FALSE;
  }

}

/**
 * Implements hook_module_implements_alter().
 *
 *
 */
function os_migrate_module_implements_alter(&$implementations, $hook) {
  //Prevent mailchimp from subscribing users during migration.  They're already subscribed.
  if ($hook == 'user_insert') {
    $migrating = variable_get('os_migrate_migrating_users', FALSE);
    $suppress = variable_get('os_migrate_suppress_email', TRUE);
    if (isset($implementations['os_mailchimp']) && $migrating && $suppress) {
      unset($implementations['os_mailchimp']);
    }
  }

  //Prevent og from trying its own migration
  if ($hook == 'migrate_api' && !db_table_exists('d6_og')) {
    if (isset($implementations['og'])) {
      unset($implementations['og']);
    }
  }

  //filefield_paths_filefield_paths_process_file
  if ($hook == 'filefield_paths_process_file' && isset($implementations['filefield_paths'])) {
    unset($implementations['filefield_paths']);
  }
}
